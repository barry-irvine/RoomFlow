[versions]

# Build
versionCode = '1'
appVersionName = '1.0.0'
compileSdk = '34'
minSdk = '24'
targetSdk = '34'

# Plugins
gradlePlugin = '8.0.2'
kotlin = '1.8.22'
crashlyticsPlugin = '2.9.7'
performancePlugin = '1.4.2'
gms = '4.3.15'
sentryPlugin = '3.11.1'
ossPlugin = '0.10.6'

# AndroidX
androidx-activity = '1.7.2'
androidx-appCompat = '1.6.1'
androidx-browser = '1.5.0'
androidx-compose = '2023.06.01'
androidx-composeCompiler = '1.4.8'
androidx-navigation = '2.6.0'
androidx-hilt = '1.0.0'
androidx-navHilt = '1.0.0'
androidx-archTest = '2.2.0'
androidx-core = '1.10.1'
androidx-dataStore = '1.0.0'
androidx-lifecycle = '2.6.1'
androidx-room = '2.5.2'
androidx-espresso = '3.5.1'
androidx-testRunner = '1.5.2'
androidx-testCore = '1.5.0'
androidx-junit = '1.1.5'
androidx-workManager = '2.8.1'
androidx-uiAutomator = '2.2.0'
androidx-testOrchestrator = '1.4.2'

# Google
google-firebase = '32.2.0'
google-hilt = '2.47'
google-material = '1.9.0'
google-truth = '1.1.3'
google-accompanist = '0.30.1'
google-maps = '18.1.0'
google-base = '18.2.0'
google-composeMaps = '2.11.4'
google-ossLicenses = '17.0.1'
google-appSet = '16.0.2'
google-review = '2.0.1'
google-location = '21.0.1'
google-testParameterInjector = '1.12'

# Square
square-retrofit = '2.9.0'
square-okHttp = '4.11.0'
square-adapterKotlin = '1.0.0'

# Other
sentry = '6.26.0'
amplitude = '1.10.2'
junit = '4.13.2'
json = '1.5.1'
datetime = '0.4.0'
coil = '2.4.0'
turbine = '1.0.0'
robolectric = '4.10.3'
mockito = '5.0.0'
mockitoInline = '5.2.0'
coroutines = '1.7.2'
airship = '17.0.3'
qrCode = '3.3.0'
desugar = '2.0.3'
pact = '4.6.1'
paparazzi = '1.3.1'
showkase = '1.0.0-beta18'
chatbot = '2.7.2'

[libraries]

# Android
android-gradle-api = { module = "com.android.tools.build:gradle-api", version.ref = "gradlePlugin" }
android-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
android-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appCompat" }
android-browser = { module = "androidx.browser:browser", version.ref = "androidx-browser" }
android-dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-dataStore" }
android-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
android-material = { module = "com.google.android.material:material", version.ref = "google-material" }
android-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
android-navHilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidx-navHilt" }
android-workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-workManager" }
android-hiltWorker = { module = "androidx.hilt:hilt-work", version.ref = "androidx-hilt" }
android-hiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-util = { module = "androidx.compose.ui:ui-util" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-test = { module = "androidx.compose.ui:ui-test-junit4" }
compose-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose" }
compose-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Lifecycle
lifecycle-liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
room-test = { module = "androidx.room:room-testing", version.ref = "androidx-room" }

# Test
test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
test-espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "androidx-espresso" }
test-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }
test-core = { module = "androidx.test:core", version.ref = "androidx-testCore" }
test-arch = { module = "androidx.arch.core:core-testing", version.ref = "androidx-archTest" }
test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-testOrchestrator" }
test-runner = { module = "androidx.test:runner", version.ref = "androidx-testRunner" }
test-rules = { module = "androidx.test:rules", version.ref = "androidx-testCore" }
test-uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx-uiAutomator" }
test-workManager = { module = "androidx.work:work-testing", version.ref = "androidx-workManager" }

# Google
google-truth = { module = "com.google.truth:truth", version.ref = "google-truth" }
google-firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "google-firebase" }
google-oss = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "google-ossLicenses" }
google-appSet = { module = "com.google.android.gms:play-services-appset", version.ref = "google-appSet" }
google-location = { module = "com.google.android.gms:play-services-location", version.ref = "google-location" }
google-base = { module = "com.google.android.gms:play-services-base", version.ref = "google-base" }
google-testParameterInjector = { module = "com.google.testparameterinjector:test-parameter-injector", version.ref = "google-testParameterInjector" }

# Hilt
hilt = { module = "com.google.dagger:hilt-android", version.ref = "google.hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "google.hilt" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "google.hilt" }

# Firebase
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-config = { module = "com.google.firebase:firebase-config-ktx" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-performance = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-dynamicLinks = { module = "com.google.firebase:firebase-dynamic-links-ktx" }

# Accompanist
accompanist-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "google-accompanist" }
accompanist-navigation = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "google-accompanist" }
accompanist-indicator = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "google-accompanist" }
accompanist-systemui = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "google-accompanist" }
accompanist-insets = { module = "com.google.accompanist:accompanist-insets-ui", version.ref = "google-accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "google-accompanist" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "google-accompanist" }

# Maps
maps-gms = { module = "com.google.android.gms:play-services-maps", version.ref = "google-maps" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "google-composeMaps" }

# Square
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "square-retrofit" }
square-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "square-adapterKotlin" }
square-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "square-okHttp" }
square-okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "square-okHttp" }
square-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "square-okHttp" }

# Sentry
sentry-core = { module = "io.sentry:sentry-android", version.ref = "sentry" }
sentry-okhttp = { module = "io.sentry:sentry-android-okhttp", version.ref = "sentry" }

# Airship
airship-core = { module = "com.urbanairship.android:urbanairship-core", version.ref = "airship" }
airship-fcm = { module = "com.urbanairship.android:urbanairship-fcm", version.ref = "airship" }
airship-inApp = { module = "com.urbanairship.android:urbanairship-automation", version.ref = "airship" }
airship-messageCenter = { module = "com.urbanairship.android:urbanairship-message-center", version.ref = "airship" }

# Kotlin
kotlin-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "json" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Review
coroutinePlay = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
review = { module = "com.google.android.play:review", version.ref = "google-review" }

# Other
amplitude = { module = "com.amplitude:analytics-android", version.ref = "amplitude" }
junit = { module = "junit:junit", version.ref = "junit" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
mockito = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito" }
mockitoInline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
qrCode = { module = "io.github.g0dkar:qrcode-kotlin-android", version.ref = "qrCode" }
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
pact = { module = "au.com.dius.pact.consumer:junit", version.ref = "pact" }
paparazzi = { module = "app.cash.paparazzi:paparazzi-gradle-plugin", version.ref = "paparazzi" }
showkase = { module = "com.airbnb.android:showkase", version.ref = "showkase" }
showkase-processor = { module = "com.airbnb.android:showkase-processor", version.ref = "showkase" }
showkase-screenshotTesting = { module = "com.airbnb.android:showkase-screenshot-testing", version.ref = "showkase" }
chatbot = { module = "com.github.yellowmessenger:YMChatbot-Android", version.ref = "chatbot" }

[bundles]
json = ["kotlin-json", "kotlin-datetime"]
network = ["square-retrofit", "square-converter", "square-logging", "square-okHttp"]
test = ["google-truth", "robolectric", "mockito", "mockitoInline", "kotlin-coroutines", "turbine", "google-testParameterInjector"]
performance = ["firebase-performance", "square-okHttp"]
firebase = ["firebase-analytics", "firebase-config", "firebase-crashlytics", "firebase-messaging", "firebase-dynamicLinks"]
room = ["room-runtime", "room-ktx"]
sentry = ["sentry-core", "sentry-okhttp"]
worker = ["android-workManager", "android-hiltWorker"]
maps = ["maps-gms", "maps-compose"]
reviews = ["review", "coroutinePlay"]
hilt = ["hilt", "android-navHilt"]
airship = ["airship-fcm", "airship-inApp", "airship-messageCenter"]
uiTesting = ["test-runner", "test-rules", "square-mockWebServer", "hilt-testing", "test-espresso",
    "test-espressoIntents", "test-junit", "compose-test", "test-uiAutomator"]
compose = ["compose-ui", "compose-preview", "compose-material3", "compose-util", "compose-viewModel", "lifecycle-compose"]

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePlugin" }
android-library = { id = "com.android.library", version.ref = "gradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "google-hilt" }
gms = { id = "com.google.gms.google-services", version.ref = "gms" }
sentry = { id = "io.sentry.android.gradle", version.ref = "sentryPlugin" }
firebaseCrashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlyticsPlugin" }
firebasePerformance = { id = "com.google.firebase.firebase-perf", version.ref = "performancePlugin" }
pact = { id = "au.com.dius.pact", version.ref = "pact" }
paparazzi = { id = "app.cash.paparazzi", version.ref = "paparazzi" }
